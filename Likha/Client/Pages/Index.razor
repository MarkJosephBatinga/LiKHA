@page "/"
@page "/category/{Url}"
@inject ICategoryService CategoryService
@inject IProductService ProductService
@inject IUserService UserService
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager


<div>
    <div class="container-fluid sort-container py-md-3 py-2 mb-2 @notLoaded">
        <div class="row d-flex align-items-center">
            <div class="col-md-3 col-4 d-flex justify-content-center">
                <div class="dropdown d-block d-xxl-none">
                    <button class="btn btn-md dropdown-toggle" type="button" id="ListTypeDrop" data-bs-toggle="dropdown"
                            aria-expanded="false">
                        Categories
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="ListTypeDrop">
                        @foreach (var categories in AllCategory)
                        {
                            <li><a class="dropdown-item" @onclick="() => CategorizeProduct(categories.Url)">@categories.Name</a></li>
                        }
                    </ul>
                </div>
            </div>
            <div class="col-md-6 col-3 d-flex-md justify-content-center">
                <div class="dropdown d-block d-xxl-none">
                    <button class="btn btn-md dropdown-toggle" type="button" id="ListTypeDrop" data-bs-toggle="dropdown"
                            aria-expanded="false">
                        Sort Art
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="ListTypeDrop">
                        <li><a class="dropdown-item" href="#">Latest</a></li>
                        <li><a class="dropdown-item" href="#">Best Selling Artist</a></li>
                        <li><a class="dropdown-item" href="#">Top Rated</a></li>
                    </ul>
                </div>
                <div class="d-none d-xxl-block">
                    <a class="btn btn-lg w-25 mx-md-1" href="">Latest</a>
                    <a class="btn btn-lg mx-md-1" href="">Best Selling Artist</a>
                    <a class="btn btn-lg w-25 mx-md-1" href="">Top Rated</a>
                </div>
            </div>
            <form class="col-md-3 col-5 d-flex justify-content-center py-md-1">
                <input class="w-75 form-control-md me-2" type="search" placeholder="Search" aria-label="Search">
                <button class="btn btn-md" type="submit"><i class="oi oi-magnifying-glass"></i></button>
            </form>
        </div>
    </div>
    <div class="container-fluid body-container">
        <div class="row @loaded">
            <LoadPage />
        </div>
        <div class="row">
            <div class="col-2 d-none d-xxl-block category-container">
                <div class="d-flex flex-column align-items-center mt-5 min-vh-100 @notLoaded">
                    <h3 class="mb-3">CATEGORIES</h3>
                    @foreach (var categories in AllCategory)
                    {
                        <button @onclick="() => CategorizeProduct(categories.Url)" class="btn btn-lg w-75 my-4">@categories.Name</button>
                    }
                </div>
            </div>
            <div class="col">
                <div class="container-fluid my-4">
                    <div class="row row-cols-md-3 row-cols-2 g-3">
                        @if (Url == null)
                        {
                            <ProductList AllProducts="AllProduct" />
                        }
                        else
                        {
                            <ProductsByCategory AllCategories="AllProductbyCategory" />
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Url { get; set; } = null;

    string loaded = string.Empty;
    string notLoaded = "d-none";
    List<Product> AllProduct = new List<Product>();
    List<Product> AllProductbyCategory = new List<Product>();
    List<Category> AllCategory = new List<Category>();


    protected override async Task OnInitializedAsync()
    {
        AllCategory = await CategoryService.LoadCategories();
        AllProduct = await ProductService.LoadProducts();
        loaded = "d-none";
        notLoaded = string.Empty;
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Url != null)
        {
            AllProductbyCategory = await ProductService.LoadProductsbyCategory(Url);
            loaded = "d-none";
        }

    }

    private void CategorizeProduct(string categoryUrl)
    {
        NavigationManager.NavigateTo($"/category/{categoryUrl}");
    }
}