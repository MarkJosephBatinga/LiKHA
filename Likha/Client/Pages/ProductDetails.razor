@page "/product/{Id}"
@inject IProductService ProductService
@inject NavigationManager NavigationManager

<div class="container-fluid">
    <div class="image-container d-flex justify-content-center p-4">
        <img src="@product.Image"
             class="art-full-image">
    </div>
    <div class="art-details container-fluid mt-3 p-md-5 p-3 py-5">
        <div class="row">
            <div class=" col-md-6">
                <h3 class="art-title">@product.Title</h3>
                <p class="art-descriptions">@product.Description</p>
            </div>
            <div class="col-md-6 d-md-flex flex-column align-items-end">
                <p class="art-price">@product.Price</p>
                <button class="btn btn-md btn-cart" @onclick="NavigateToCart">Add to Cart</button>
            </div>
        </div>
    </div>
    <div class="container-fluid artist-container mt-3 px-md-5 p-3">
        <div class="row">
            <div class="col-6 d-flex align-items-center justify-content-start">
                <h3 class="artist m-0">@product.Artist</h3>
            </div>
            <div class="col-6 d-flex flex-column align-items-end justify-content-center">
                <button class="btn btn-md btn-follow">FOLLOW</button>
            </div>
        </div>
    </div>
    <div class="container-fluid my-3">
        <div class="row row-cols-xl-3 row-cols-2 g-3">
            <ProductList />
        </div>
    </div>
</div>

@code {
    private Product product = null;

    [Parameter]
    public string Id { get; set; }

    private void NavigateToCart()
    {
        NavigationManager.NavigateTo("cart");
    }


    protected override void OnInitialized()
    {
        if (ProductService.Products == null || ProductService.Products.Count == 0)
        {
            ProductService.LoadProducts();
        }

        product = ProductService.Products.FirstOrDefault(prod => prod.Id == Int32.Parse(Id));
    }
}
