@page "/account"
@inject IUserService UserService
@inject IOrderService OrderService
@inject IProductService ProductService
@inject ILocalStorageService LocalStorage
@inject IAddressService AddressService
@inject IJSRuntime JsRuntime
@implements IDisposable

<div class="container-fluid">
    <div class="row">
        <div class="dropdown-container d-block d-xl-none d-flex justify-content-around">
            <div class="dropdown">
                <button class="btn btn-md dropdown-toggle" type="button" id="AccountDropdown" data-bs-toggle="dropdown"
                        aria-expanded="false">
                    Manage My Account
                </button>
                <div class="dropdown-menu" aria-labelledby="AccountDropdown">
                    <button class="dropdown-item" @onclick='() => ChangeBody(0)'>My Account</button>
                    <button class="dropdown-item" @onclick='() => ChangeBody(1)'>Edit Profile</button>
                    <button class="dropdown-item" @onclick='() => ChangeBody(2)'>Edit Address</button>
                </div>
            </div>
            <div class="dropdown">
                <button class="btn btn-md dropdown-toggle" type="button" id="GalleryDropdown" data-bs-toggle="dropdown"
                        aria-expanded="false">
                    Manage My Gallery
                </button>
                <div class="dropdown-menu" aria-labelledby="GalleryDropdown">
                    <a class="dropdown-item" href="#">Edit Profile</a>
                    <a class="dropdown-item" href="#">Edit Address</a>
                    <a class="dropdown-item" href="#">Orders</a>
                </div>
            </div>
        </div>
        <div class="manage-container d-none d-xl-block col-xl-3 d-flex flex-column align-items-center">
            <h3 class="manage-title">My Account</h3>
            <div class="manage-box d-flex flex-column align-items-center">
                <h5 class="manage-subtitle">Manage My Account</h5>
                <button class="manage-link" @onclick='() => ChangeBody(0)'>My Account</button>
                <button class="manage-link" @onclick='() => ChangeBody(1)'>Edit Profile</button>
                <button class="manage-link" @onclick='() => ChangeBody(2)'>Edit Address</button>
            </div>
            <h3 class="manage-title">My Gallery</h3>
            <div class="manage-box d-flex flex-column align-items-center">
                <h5 class="manage-subtitle">Manage My Gallery</h5>
                <a href="" class="manage-link">Edit Profile</a>
                <a href="" class="manage-link">Edit Address</a>
                <a href="" class="manage-link">Orders</a>
            </div>
        </div>
        <div class="col-xl-9">
            @if (IdLink == 0)
            {
                <DisplayAccount user="@user" OrderByBuyer="OrderByBuyer" />
            }
            else if (IdLink == 1)
            {
                <EditProfile newUser="@user" />
            }
            else if (IdLink == 2)
            {
                <EditAddress newUser="@user" />
            }
        </div>
    </div>
</div>

@code {
    User user = new User();
    int userId = 0;
    int IdLink = 0;
    Order LoadOrder = new Order();
    List<Order> OrderByBuyer = new List<Order>();

    protected override async Task OnInitializedAsync()
    {
        var Username = await LocalStorage.GetItemAsStringAsync("username");
        user = await UserService.GetUser(Username);
        userId = user.Id;

        var result = await OrderService.DisplayBuyerOrder(user.Id);
        foreach (var item in result)
        {
            LoadOrder = item;
            var product = await ProductService.LoadProduct(item.ProductId);
            LoadOrder.Image = product.Image;
            LoadOrder.Artist = product.Artist;
            OrderByBuyer.Add(LoadOrder);
        }
    }

    private void ChangeBody(int Id)
    {
        IdLink = Id;
    }


    protected override void OnInitialized()
    {
        UserService.OnChange += StateHasChanged;
        ProductService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        UserService.OnChange -= StateHasChanged;
        ProductService.OnChange -= StateHasChanged;
    }
}
